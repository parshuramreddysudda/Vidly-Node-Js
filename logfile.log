{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-27T13:00:24.405Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-27T13:00:26.454Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-27T13:42:24.664Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-27T13:42:26.729Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-27T13:45:09.699Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-27T13:45:11.746Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T04:05:04.213Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T04:05:06.274Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T04:06:28.199Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T04:06:30.225Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T04:19:49.604Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:08:59.699Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:09:01.733Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:10:00.082Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:10:02.162Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:10:13.462Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:10:15.516Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:10:30.527Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:10:32.578Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:18:38.708Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:18:40.752Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:18:45.641Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:18:47.693Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:19:11.924Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:19:14.033Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:23:22.530Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:23:24.596Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:23:26.928Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:23:28.972Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:45:54.226Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:45:56.266Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:47:49.642Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:48:20.746Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:48:45.227Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:48:47.285Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:49:02.050Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:49:04.075Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:52:17.066Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:52:19.158Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T05:52:21.255Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:53:07.888Z"}
{"message":"Cast to ObjectId failed for value \"2\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"2\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"2\"","kind":"ObjectId","value":"2","path":"_id","level":"error","timestamp":"2020-12-28T05:53:08.153Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:53:09.938Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T05:53:12.097Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:54:17.118Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T05:54:17.141Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:54:19.135Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:54:55.298Z"}
{"message":"Cast to ObjectId failed for value \"2\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"2\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"2\"","kind":"ObjectId","value":"2","path":"_id","level":"error","timestamp":"2020-12-28T05:54:55.694Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:54:57.373Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T05:54:59.479Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:55:46.305Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:55:48.365Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T05:55:50.497Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:58:05.379Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:58:07.443Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T05:58:09.518Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T05:58:30.351Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T05:58:32.423Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T05:58:34.527Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:06:56.648Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:06:57.974Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T06:06:58.101Z"}
{"message":"Cast to ObjectId failed for value \"2\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"2\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"2\"","kind":"ObjectId","value":"2","path":"_id","level":"error","timestamp":"2020-12-28T06:06:58.724Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:06:58.761Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:07:00.065Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:12:00.296Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:12:02.313Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:16:03.210Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:16:05.267Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:16:16.042Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:16:18.080Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:16:34.195Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:16:35.978Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:16:36.267Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:16:38.079Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:16:59.180Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:17:01.176Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:17:01.236Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:17:03.254Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:17:44.379Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:17:46.464Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:18:25.701Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:18:27.756Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:18:40.114Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:18:42.351Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:19:00.144Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:19:02.182Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:19:23.836Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:19:25.889Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:19:47.507Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:19:49.578Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:20:05.215Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:20:07.282Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:20:19.832Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:20:21.909Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:21:12.414Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:21:14.492Z"}
{"message":"Cast to ObjectId failed for value \":\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \":\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\":\"","kind":"ObjectId","value":":","path":"_id","level":"error","timestamp":"2020-12-28T06:21:16.734Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:21:54.059Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:21:56.097Z"}
{"message":"Right-hand side of 'instanceof' is not callable","stack":"TypeError: Right-hand side of 'instanceof' is not callable\n    at model.Query.resetId (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:218:12)\n    at ObjectId.Object.<anonymous>.SchemaType._applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:670:22)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:694:16)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","level":"error","timestamp":"2020-12-28T06:22:08.038Z"}
{"message":"Right-hand side of 'instanceof' is not callable","stack":"TypeError: Right-hand side of 'instanceof' is not callable\n    at model.Query.resetId (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:218:12)\n    at ObjectId.Object.<anonymous>.SchemaType._applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:670:22)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:694:16)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","level":"error","timestamp":"2020-12-28T06:23:15.838Z"}
{"message":"Right-hand side of 'instanceof' is not callable","stack":"TypeError: Right-hand side of 'instanceof' is not callable\n    at model.Query.resetId (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:218:12)\n    at ObjectId.Object.<anonymous>.SchemaType._applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:670:22)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:694:16)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","level":"error","timestamp":"2020-12-28T06:23:25.826Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:24:57.452Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:24:59.537Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:25:06.063Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:25:08.125Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:25:53.911Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:25:55.966Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:26:34.332Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:26:36.370Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:29:09.676Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:29:11.718Z"}
{"message":"Right-hand side of 'instanceof' is not callable","stack":"TypeError: Right-hand side of 'instanceof' is not callable\n    at model.Query.resetId (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:218:12)\n    at ObjectId.Object.<anonymous>.SchemaType._applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:670:22)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:694:16)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","level":"error","timestamp":"2020-12-28T06:29:15.957Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:29:53.297Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:29:55.371Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:30:15.669Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:30:17.744Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:31:07.223Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:31:09.492Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:31:13.837Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:31:15.913Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:31:35.933Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:31:38.028Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:33:03.202Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:33:05.302Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:33:26.570Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:33:28.733Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:33:37.244Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:33:39.303Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:34:24.233Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:34:26.325Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:34:58.415Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:35:00.475Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:35:17.778Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:35:19.829Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:35:28.972Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:35:31.035Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:36:11.418Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:36:13.473Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:36:52.332Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:36:54.389Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:36:58.686Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:37:00.751Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:39:09.801Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:39:11.870Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:39:26.870Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:39:28.921Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:41:04.656Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:41:06.753Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T06:41:09.055Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:42:39.150Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:42:41.215Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T06:42:43.416Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:43:29.987Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:43:32.066Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:44:05.466Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:44:07.703Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:44:55.014Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:44:57.102Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:45:03.530Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:45:05.570Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:45:15.196Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:45:17.280Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T06:45:19.531Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:54:02.512Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:54:04.559Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:276:8\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\kareem\\index.js:23:7\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-12-28T06:54:06.742Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:55:04.303Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:55:06.373Z"}
{"message":"Cannot read property 'ObjectId' of undefined","stack":"TypeError: Cannot read property 'ObjectId' of undefined\n    at Object.<anonymous>.module.exports (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\middleware\\validateObjectId.js:4:25)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at jsonParser (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\body-parser\\lib\\types\\json.js:109:7)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at expressInit (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\middleware\\init.js:40:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at query (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\middleware\\query.js:45:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\application.js:174:10)\n    at Server.app (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\express.js:39:9)\n    at Server.emit (events.js:315:20)\n    at parserOnIncoming (_http_server.js:790:12)\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:119:17)","level":"error","timestamp":"2020-12-28T06:55:08.549Z"}
{"message":"Cannot read property 'ObjectId' of undefined","stack":"TypeError: Cannot read property 'ObjectId' of undefined\n    at Object.<anonymous>.module.exports (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\middleware\\validateObjectId.js:4:25)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at jsonParser (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\body-parser\\lib\\types\\json.js:109:7)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at expressInit (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\middleware\\init.js:40:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at query (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\middleware\\query.js:45:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\application.js:174:10)\n    at Server.app (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\express.js:39:9)\n    at Server.emit (events.js:315:20)\n    at parserOnIncoming (_http_server.js:790:12)\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:119:17)","level":"error","timestamp":"2020-12-28T06:55:08.574Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:57:17.105Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:57:19.187Z"}
{"message":"Cannot read property 'ObjectId' of undefined","stack":"TypeError: Cannot read property 'ObjectId' of undefined\n    at module.exports (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\middleware\\validateObjectId.js:4:25)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-12-28T06:57:30.724Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:57:50.110Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:57:52.159Z"}
{"message":"Cannot read property 'ObjectId' of undefined","stack":"TypeError: Cannot read property 'ObjectId' of undefined\n    at module.exports (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\middleware\\validateObjectId.js:4:25)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-12-28T06:57:57.151Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:58:26.667Z"}
{"message":"Cannot read property 'ObjectId' of undefined","stack":"TypeError: Cannot read property 'ObjectId' of undefined\n    at module.exports (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\middleware\\validateObjectId.js:4:25)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-12-28T06:58:28.200Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:58:28.752Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:58:37.729Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:58:39.791Z"}
{"message":"Cannot read property 'ObjectId' of undefined","stack":"TypeError: Cannot read property 'ObjectId' of undefined\n    at module.exports (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\middleware\\validateObjectId.js:4:25)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-12-28T06:58:48.882Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:59:00.878Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:59:02.932Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:59:04.180Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:59:06.268Z"}
{"message":"Cannot read property 'ObjectId' of undefined","stack":"TypeError: Cannot read property 'ObjectId' of undefined\n    at module.exports (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\middleware\\validateObjectId.js:5:25)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-12-28T06:59:07.185Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:59:34.563Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:59:36.615Z"}
{"message":"Cannot read property 'ObjectId' of undefined","stack":"TypeError: Cannot read property 'ObjectId' of undefined\n    at module.exports (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\middleware\\validateObjectId.js:5:25)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-12-28T06:59:37.720Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T06:59:52.703Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T06:59:54.734Z"}
{"message":"Cannot read property 'ObjectId' of undefined","stack":"TypeError: Cannot read property 'ObjectId' of undefined\n    at module.exports (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\middleware\\validateObjectId.js:5:25)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\express\\lib\\router\\layer.js:95:5)","level":"error","timestamp":"2020-12-28T06:59:55.634Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T07:00:17.383Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T07:00:19.451Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T07:00:30.303Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T07:00:32.395Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T07:00:43.430Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T07:00:45.522Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T07:01:05.347Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T07:01:07.442Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T07:02:10.332Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T07:02:12.389Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T07:03:07.140Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T07:03:09.207Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T07:58:43.833Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T07:58:46.415Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T07:59:07.100Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T07:59:09.169Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:19:59.272Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:20:01.588Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:20:21.588Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:20:23.621Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:23:49.683Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:23:51.734Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:24:38.703Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:24:40.734Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:24:45.491Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:24:47.548Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:25:53.076Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:25:55.159Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:26:18.257Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:26:20.332Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:27:05.037Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:27:07.123Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:27:22.772Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:27:24.854Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:28:02.359Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:28:04.618Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:28:24.606Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:28:26.671Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:31:43.460Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:31:45.529Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:35:06.965Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:35:09.028Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:36:02.776Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:36:04.847Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:36:09.175Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:36:11.228Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:36:35.576Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:36:37.622Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:38:02.600Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:38:04.693Z"}
{"message":"Genre validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","errors":{"name":{"message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","name":"ValidatorError","properties":{"message":"Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length (50).","type":"maxlength","maxlength":50,"path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"},"kind":"maxlength","path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","$isValidatorError":true}},"_message":"Genre validation failed","stack":"ValidationError: Genre validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).\n    at new ValidationError (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\error\\validation.js:27:11)\n    at model.Object.<anonymous>.Document.invalidate (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\document.js:1656:32)\n    at H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\document.js:1528:17\n    at Immediate.<anonymous> (H:\\Git Folder\\Node js\\4.1- Express\\vidly\\node_modules\\mongoose\\lib\\schematype.js:785:9)\n    at processImmediate (internal/timers.js:456:21)","name":"ValidationError","level":"error","timestamp":"2020-12-28T09:38:06.946Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:38:28.567Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:38:30.620Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:54:00.076Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:54:02.201Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:55:27.548Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:55:29.653Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T09:55:54.539Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T09:55:56.587Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T10:13:36.722Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T10:13:38.760Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T10:15:31.259Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T10:15:33.324Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T10:44:24.627Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T10:44:27.036Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T10:47:04.643Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T10:47:06.682Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T10:52:53.023Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T10:52:55.073Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T12:53:44.304Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T12:53:46.674Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T12:56:00.490Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T12:56:02.534Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T12:56:19.763Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T12:56:21.903Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T12:57:46.574Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T12:57:48.683Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T12:57:54.891Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T12:57:56.953Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T12:58:29.480Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T12:58:31.530Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T12:58:49.323Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T12:58:51.388Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T12:59:40.361Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T12:59:42.499Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T13:00:05.047Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T13:00:07.175Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T13:02:23.268Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T13:02:25.333Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T13:02:30.046Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T13:02:32.121Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T13:02:36.521Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T13:13:33.104Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T13:13:35.268Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-28T13:18:17.704Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-28T13:18:19.755Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T00:52:55.571Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T00:52:58.040Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T00:53:03.719Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T00:53:05.831Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T00:54:00.082Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T00:54:22.739Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T00:54:24.807Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T00:57:16.269Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T00:57:18.357Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T00:58:54.667Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T00:58:56.726Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:18:18.982Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:18:21.059Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:19:34.652Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:19:36.698Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:25:30.449Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:25:32.524Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:26:17.995Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:26:20.108Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:26:24.612Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:26:26.651Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:27:03.449Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:27:05.647Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:27:12.912Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:27:15.204Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:28:27.824Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:28:29.868Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:28:49.723Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:28:51.816Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:31:11.502Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:31:13.666Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:31:44.760Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:31:46.809Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:32:50.952Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:32:53.010Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:34:05.230Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:34:07.296Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:35:11.318Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:35:13.377Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:42:23.902Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:42:25.948Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:43:10.717Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:43:12.834Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:44:15.163Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:44:17.254Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-30T01:44:27.426Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-30T01:44:29.488Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-31T07:47:01.282Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-31T07:47:03.603Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-31T07:47:09.585Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-31T07:47:11.637Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-12-31T07:47:18.624Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-12-31T07:47:20.693Z"}
